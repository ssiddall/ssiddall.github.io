<HTML>
<HEAD>
<TITLE>Kenyon College - Learning Technologies Courseware</TITLE>
<LINK REL="ToC" HREF="httoc.htm">
<LINK REL="Index" HREF="htindex.htm">
<LINK REL="Next" HREF="multdesn.htm">
<LINK REL="Previous" HREF="wp61.htm"></HEAD>
<BODY BGCOLOR="#FFFFFF">
<P><A HREF="wp61.htm"><IMG SRC="bluppage.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="Previous Page"></A>
<A HREF="httoc.htm"><IMG SRC="blutoc.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="TOC"></A>
<A HREF="htindex.htm"><IMG SRC="bluindex.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="Index"></A>
<A HREF="multdesn.htm"><IMG SRC="blunpage.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="Next Page"></A>
</P><HR WIDTH=80% SIZE=4 ALIGN=CENTER><UL>
<UL>
<UL>
<UL>
<LI>
<A HREF="#I2">Sources of Courseware</A></LI>
<LI>
<A HREF="#I3">Why use Computer Programs in a Course?</A></LI>
<LI>
<A HREF="#I4">What Resources are Required to Create Undergraduate-Level Courseware?</A></LI>
<LI>
<A HREF="#I5">What Incentives are there for Faculty to Design and Implement Courseware?</A></LI>
<LI>
<A HREF="#I6">Some Examples of Courseware Authoring Tools</A></LI>
<LI>
<A HREF="#I7">Demonstrations and Reviews</A></LI>
<LI>
<A HREF="#I8">Definitions</A></LI></UL></UL></UL></UL>

<HR ALIGN=CENTER>
<H1><A ID="I1" NAME="I1">Courseware</A></H1>
<HR ALIGN=CENTER>
<P>The purpose of this document is to outline some of the definitions and issues involved in selecting and buying, designing and creating, and using courseware.  Courseware is simply software used for instruction. Normally, courseware is differentiated from other programs such as word processors and spreadsheets that are usually called &#147;applications.&#148;   Applications are office tools that are common to many enterprises. Applications are independent of the content that one creates through the use of the application. Courseware on the other hand is not independent of content.  For example, courseware for the study of the Spanish language contains Spanish language materials; that for the study of molecules is designed to allow interaction with molecular models.   </P>
<P>Commercial courseware can be purchased or can be created.  Computer programs are used to create courseware (programs that create programs).  Such programs are called &#147;authoring&#148; programs.  Authoring programs are independent of content like applications (and are in fact applications).  Authoring programs focus on the design and creation of discipline specific courseware.  For example, the applications Authorware Professional and Multimedia ToolBook make it possible for those familiar with the basics of Windows to create meaningful courseware in their chosen discipline.   Effective courseware is usually interactive; that is, the user of the courseware is prompted for content-related input, the program stores that input and plays it back.  Presentation software, on the other hand, is not interactive.  (Please see the chapter on Microsoft PowerPoint in this workbook for information on presentation software).</P>
<P>Hence, courseware can be created by individuals engaged in teaching or learning.  It can also be purchased from commercial sources.  It can be obtained free (public domain freeware) or at very low cost (shareware) from content specialists who have developed it and distribute it without commercial incentives.  </P>
<H2><A ID="I2" NAME="I2">
<BR>Sources of Courseware</A></H2>
<HR ALIGN=CENTER>
<P><I>Commercial courseware</I> is usually supported better than public domain freeware, although the recent trend is to charge for support after an initial period of free support.  </P>
<P><I>Freeware</I> packages come on an &quot;as is&quot; basis,  indicating that the program makes no promise of meeting your needs, of being bug-free or of even working.  <I>Shareware </I>is normally circulated freely but displays a prominent, opening screen that asks the user to register any copy they retain for more than a short time.  Registration fees range up to $50.  </P>
<P>There are three major issues in selecting courseware for use in a course: student access, cost, and support.  Courseware must be available to students when they need it, so it should operate on standard computers of the institution.  A single copy of a program in a faculty office is not useful for instruction; it may serve to inform the faculty or allow the faculty to prepare materials, but student access, even in small classes, will usually be problematic especially if the software is effective (hence popular).  Commercial software costs more than freeware or shareware and sufficient copies must be acquired to facilitate student access. But commercial software is usually more reliable and when problems arise, there is almost always a means to get help.  Such is usually not the case for non-commercial software.  Freeware and shareware should be evaluated rigorously before a commitment is made to use in courses.  There are other dimensions to software support in addition to program bugs. Ease of use is a critical factor in a program's effectiveness in the classroom.  While the institution devotes some resources to the support of major, campus-wide applications such as WordPerfect, the instructor is the major support point for discipline-specific software. The ICS staff are available to help select, evaluate,  purchase and install courseware but ultimately, the use of courseware is the faculty's support responsibility.  Fortunately, a wealth of courseware is available to run in the Microsoft Windows environment (see the article &quot;Windows&quot; in this workbook); Windows provides a consistent interface for using these programs which require far less technical instruction than DOS-based programs.  Pointing and clicking a mouse on icons to run programs is becoming a widely accepted interface, much like the instruments on the dashboard of a car.  With such a well-known, nearly universal interface, students can focus on the content rather than the technical issues of using the program.</P>
<H2><A ID="I3" NAME="I3">
<BR>Why use Computer Programs in a Course?</A></H2>
<HR ALIGN=CENTER>
<P>There are many reasons for using coursware to supplement traditional teaching methods.  Courseware can visually present concepts which are not easily rendered on paper or in text. Courseware is portable; learners can access it in computer laboratories and on their own machines (80% of Kenyon's class of 1997 had a computer in their residence hall).  Courseware is available when the instructor cannot be, so it extends the classroom experience.  Courseware can be designed not only to present materials but to interact with the learner, and provide the opportunity for feedback (which, depending on the program, can be recorded and evaluated).</P>
<H2><A ID="I4" NAME="I4">
<BR>What Resources are Required to Create Undergraduate-Level Courseware?</A></H2>
<HR ALIGN=CENTER>
<P>Ten years ago, the trend in courseware development was for the content specialist to consult with instructional designers, design an application, then invest significant resources in the implementation of each program (see the article &quot;Designing a Successful Multimedia Program&quot; in this workbook).  In 1989, it was estimated that it took 200 hours of design and programming effort to develop one hour of courseware presentations.  Today, authoring tools have become sufficiently sophisticated that faculty can produce effective courseware in much less time and with little or no expertise.   With five to ten hours of introduction to most modern courseware authoring tools, most non-programmers should be able to create one hour of new courseware for every five hours spent designing and linking the content material</P>
<P> Product versus process </P>
<P>A significant trend in courseware design in the past year, particularly here at Kenyon, has been to shift the focus of courseware design and implementation from the faculty as presenter to the students as learners.  Classes in Asian Studies, Modern Languages and Literature, and in the Integrated Program in Humane Studies have gathered disciplinary materials, selected an authoring tool, then integrated their materials into multimedia publications in a highly collaborative, exploratory manner, guided by the faculty and assisted from time to time by computing and library staff.  The focus is on the process of assembling the contents of the courseware rather than on the sophistication of the end product. This new model for courseware authoring seems to have several key benefits.  It engages the students collaboratively.  The activity requires the student to research and gather original materials, and forge appropriate linkages among related components, often from other students.  It creates a &quot;document&quot; which can be expanded and refined continually by subsequent classes.  With faculty playing the role of disciplinary guide, it tends to deconstruct the authority of the traditional classroom. In most cases, this activity is not in addition to traditional coursework; it is a different, and arguably better, way of teaching.</P>
<H2><A ID="I5" NAME="I5">
<BR>What Incentives are there for Faculty to Design and Implement Courseware?</A></H2>
<HR ALIGN=CENTER>
<P>Courseware can be just as effective as the printed word, if not more so, in communicating scholarly work, so should the time spent in courseware development be counted toward tenure and promotion?  Many new textbooks are accompanied by software to supplement the text.  Should this be peer-reviewed and included in the faculty evaluation process?  What role is played by other incentives to create curricular materials with technology, such as Kenyon's Academic Computing Award Program?</P>
<H2><A ID="I6" NAME="I6">
<BR>Some Examples of Courseware Authoring Tools</A></H2>
<HR ALIGN=CENTER>
<P><I>Authorware Professional</I></P>
<P>a Windows program from Macromind which uses a graphical interface to create flow diagrams that represent varied pathways through course materials</P>
<P><I>ToolBook</I>, by Asymetrix.</P>
<P>a Windows program which emphasizes a scripting language to create the flow through course materials.  Programs developed with ToolBook are called &quot;books.&quot;</P>
<P><I>Guide</I></P>
<P>the first commercial hypertext program, originally written for DOS computers, now a Windows application that includes multimedia links.</P>
<P><I>HyperCard</I></P>
<P>the Macintosh hypertext program that was distributed freely by Apple Computer.  Tens of thousands of HyperCard &quot;stacks&quot; (or programs)  were written in the public domain as a result of the open distribution of HyperCard.</P>
<P><I>Wincraft Converter, Heizer Convert-It</I></P>
<P>Windows programs that convert Macintosh HyperCard stacks into ToolBook programs that run under Microsoft Windows.</P>
<H2><A ID="I7" NAME="I7">
<BR>Demonstrations and Reviews</A></H2>
<HR ALIGN=CENTER>
<P>At various times in the Summer Institute, we will examine examples of Kenyon-produced courseware as well as several types of commercial software which can be used in the classroom including:</P>
<P>Authorware Professional,  Multimedia Toolbook, and Guide -authoring tools for multimedia projects</P>
<P>Stella - a simulation program which allows faculty and students to create and manipulate complex models of virtually any type of system: economic, biological, physical, chemical and more</P>
<P>Painter - a graphics application that simulates many of the tools used in visual art</P>
<P>The <I>Transparent Language</I> system</P>
<P>A selection of multimedia titles from Voyager Software, including &#147;Poetry in Motion,&#148; &#147;The First Chinese Emperor,&#148; &#147;I Photograph to Remember,&#148; &#147;Baseball&#146;s Greatest Hits,&#148; and &#147;Ephemeral Films: 1931-1960.&#148;</P>
<P>Microsoft PowerPoint, an application for creating presentations of lecture materials, including multimedia inclusions.</P>
<H2><A ID="I8" NAME="I8">
<BR>Definitions</A></H2>
<HR ALIGN=CENTER>
<P>
<FONT SIZE=+1><I>Authoring tools</I></FONT></P>
<P>computer programs which make it possible to create and modify other programs; a specialized type of CASE tools. </P>
<P>
<FONT SIZE=+1><I>CASE Tools</I></FONT></P>
<P><B>C</B>omputer-<B>A</B>ided <B>S</B>oftware <B>E</B>ngineering, a class of software which enables the non-programmer to create sophisticated applications.</P>
<P>
<FONT SIZE=+1><I>Hypertext</I><A ID="I9" NAME="I9"></A></FONT></P>
<P>texts which utilize a method of &quot;linking&quot; related textual materials without the constraint of linearity.  Hypertexts allow the learner to browse through complex texts by following different paths. </P>
<P>
<FONT SIZE=+1><I>Hypermedia</I></FONT></P>
<P>non-linearly linked materials as in hypertexts but not restricted to textual material.  Can include graphics, audio, video and text.</P>
<P>
<FONT SIZE=+1><I>CAI</I></FONT></P>
<P><B>C</B>omputer-<B>A</B>ided <B>I</B>nstruction.  The old model for using computers to instruct, using the computer as an electronic page-turner.  Often called &quot;drill and kill&quot;. Minimally effective for most applications, especially by today's standards which include personal interaction with multimedia materials.</P>
<HR ALIGN=CENTER>
<P><A HREF="wp61.htm"><IMG SRC="bluppage.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="Previous Page"></A>
<A HREF="httoc.htm"><IMG SRC="blutoc.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="TOC"></A>
<A HREF="htindex.htm"><IMG SRC="bluindex.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="Index"></A>
<A HREF="multdesn.htm"><IMG SRC="blunpage.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="Next Page"></A>
</P></BODY></HTML>
